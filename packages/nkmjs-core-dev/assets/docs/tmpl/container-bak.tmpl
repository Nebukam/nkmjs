<?js
    var self = this;
    var isGlobalPage;

    docs.forEach(function(doc, i) {
?>

<?js
    // we only need to check this once
    if (typeof isGlobalPage === 'undefined') {
        isGlobalPage = (doc.kind === 'globalobj');
    }
?>
<?js if (doc.kind === 'mainpage' || (doc.kind === 'package')) { ?>
    <?js= self.partial('mainpage.tmpl', doc) ?>
<?js } else if (doc.kind === 'source') { ?>
    <?js= self.partial('source.tmpl', doc) ?>
<?js } else { ?>

<section>

<header>
    <?js if (!doc.longname || doc.kind !== 'module') { ?>
        <h2><?js if (doc.ancestors && doc.ancestors.length) { ?>
            <span class="ancestors"><?js= doc.ancestors.join('') ?></span>
        <?js } ?>
        <!-- <?js= doc.name ?> -->
        <?js if (doc.variation) { ?>
            <sup class="variation"><?js= doc.variation ?></sup>
        <?js } ?></h2>
        <?js if (doc.classdesc) { ?>
            <div class="class-description usertext"><?js= doc.classdesc ?></div>
        <?js } ?>
    <?js } else if (doc.kind === 'module' && doc.modules) { ?>
        <?js doc.modules.forEach(function(module) { ?>
            <?js if (module.classdesc) { ?>
                <div class="class-description"><?js= module.classdesc ?></div>
            <?js } ?>
        <?js }) ?>
    <?js } ?>

    <?js var methods = self.find({kind: 'function', memberof: isGlobalPage ? {isUndefined: true} : doc.longname});
    if (methods && methods.length) { ?> <a href="#a-members"><span class="namespace">go to</span> → Members</a> <?js } ?>

</header>

<article>
    <?js if (!doc.hideconstructor) { ?>
        <div class="container-overview">
        <?js if (doc.kind === 'module' && doc.modules) { ?>
            <?js if (doc.description) { ?>
                <div class="description usertext"><?js= doc.description ?></div>
            <?js } ?>

            <?js doc.modules.forEach(function(module) { ?>
                <?js= self.partial('method.tmpl', module) ?>
            <?js }) ?>
        <?js } else if (doc.kind === 'class') { ?>
            <?js= self.partial('method.tmpl', doc) ?>
        <?js } else { ?>
            <?js= self.partial('details.tmpl', doc) ?>

            <?js if (doc.description) { ?>
                <div class="description usertext"><?js= doc.description ?></div>
            <?js } ?>

            <?js if (doc.examples && doc.examples.length) { ?>
                <?js= self.partial('examples.tmpl', doc.examples) ?>
            <?js } ?>
        <?js } ?>
        </div>
    <?js } ?>

    <?js if (doc.augments && doc.augments.length) { ?>
        <h3 class="subsection-title" data-type="extends">Extends</h3>

        <?js= self.partial('augments.tmpl', doc) ?>
    <?js } ?>

    <?js if (doc.requires && doc.requires.length) { ?>
        <h3 class="subsection-title" data-type="requires">Requires</h3>

        <ul><?js doc.requires.forEach(function(r) { ?>
            <li><?js= self.linkto(r, r) ?></li>
        <?js }); ?></ul>
    <?js } ?>

    <?js
        var classes = self.find({kind: 'class', memberof: doc.longname});
        if (!isGlobalPage && classes && classes.length) {
    ?>
        <h3 class="subsection-title" data-type="classes">Classes</h3>

        <dl><?js self.orderDoclets(classes, 'classes').forEach(function(c) { ?>
            <dt><?js= self.linkto(c.longname, c.name) ?></dt>
            <dd><?js if (c.summary) { ?><?js= c.summary ?><?js } ?></dd>
        <?js }); ?></dl>
    <?js } ?>

    <?js if (doc.signals && doc.signals.length) { ?>
        <h3 class="subsection-title" id="a-signals" data-type="signals">Signals</h3>

        <?js doc.signals.forEach(function(p) { ?>
            <?js= self.partial('signals.tmpl', p) ?>
        <?js }); ?>
    <?js } ?>
    
    <?js
        var interfaces = self.find({kind: 'interface', memberof: doc.longname});		
        if (!isGlobalPage && interfaces && interfaces.length) {		
    ?>		
	    <h3 class="subsection-title" data-type="interfaces">Interfaces</h3>		
	
	    <dl><?js self.orderDoclets(interfaces, 'interfaces').forEach(function(i) { ?>		
	        <dt><?js= self.linkto(i.longname, i.name) ?></dt>		
	        <dd><?js if (i.summary) { ?><?js= i.summary ?><?js } ?></dd>		
	    <?js }); ?></dl>		
	<?js } ?>

     <?js
        var mixins = self.find({kind: 'mixin', memberof: doc.longname});
        if (!isGlobalPage && mixins && mixins.length) {
    ?>
        <h3 class="subsection-title" data-type="mixins">Mixins</h3>

        <dl><?js self.orderDoclets(mixins, 'mixins').forEach(function(m) { ?>
            <dt><?js= self.linkto(m.longname, m.name) ?></dt>
            <dd><?js if (m.summary) { ?><?js= m.summary ?><?js } ?></dd>
        <?js }); ?></dl>
    <?js } ?>

    <?js
        var namespaces = self.find({kind: 'namespace', memberof: doc.longname});
        if (!isGlobalPage && namespaces && namespaces.length) {
    ?>
        <h3 class="subsection-title" data-type="namespaces">Namespaces</h3>

        <dl><?js self.orderDoclets(namespaces, 'namespaces').forEach(function(n) { ?>
            <dt><?js= self.linkto(n.longname, n.name) ?></dt>
            <dd><?js if (n.summary) { ?><?js= n.summary ?><?js } ?></dd>
        <?js }); ?></dl>
    <?js } ?>

    <?js
        var members = self.find({kind: 'member', memberof: isGlobalPage ? {isUndefined: true} : doc.longname});

        // symbols that are assigned to module.exports are not globals, even though they're not a memberof anything
        if (isGlobalPage && members && members.length && members.forEach) {
            members = members.filter(function(m) {
                return m.longname && m.longname.indexOf('module:') !== 0;
            });
        }
        if (members && members.length && members.forEach) {
    ?>
        <h3 class="subsection-title" id="a-members" data-type="members">Members</h3>

        <?js 
            var currentGroup = null;
            var group = null;
            var closeGroup = false;
            var openGroup = false;
            self.orderDoclets(members, 'members').forEach(function(p) { 
                closeGroup = openGroup = false;
                group = p.group;
                if(group){ if(currentGroup != group.name){ openGroup = true; if(currentGroup){closeGroup = true;} } currentGroup = group.name; }
                else{ if(currentGroup){ closeGroup = true; } currentGroup = null; }                
        ?>
        <?js if(closeGroup){ ?> </div> <?js } ?>
        <?js if(openGroup){ ?> 
            <div class="content-group group-<?js= group.name ?>"> 
            <div class="group-header"> <?js= group.name ?><br><span class="group-description"><?js= group.description ?></span></div>
        <?js } ?>

            <?js= self.partial('members.tmpl', p) ?>

        <?js }); ?>
        <?js if(closeGroup){ ?> </div> <?js } ?>

    <?js } ?>

    <?js
        var methods = self.find({kind: 'function', memberof: isGlobalPage ? {isUndefined: true} : doc.longname});
        if (methods && methods.length && methods.forEach) {
    ?>
        <h3 class="subsection-title" id="a-methods" data-type="methods">Methods</h3>

        <?js 
            var currentGroup = null;
            var group = null;
            var closeGroup = false;
            var openGroup = false;
            self.orderDoclets(methods, 'methods').forEach(function(m) {
                closeGroup = openGroup = false;
                group = m.group;
                if(group){ if(currentGroup != group.name){ openGroup = true; if(currentGroup){closeGroup = true;} } currentGroup = group.name; }
                else{ if(currentGroup){ closeGroup = true; } currentGroup = null; }                
        ?>
        <?js if(closeGroup){ ?> </div> <?js } ?>
        <?js if(openGroup){ ?> 
            <div class="content-group group-<?js= group.name ?>">
            <div class="group-header">→ <?js= group.name ?><br><span class="group-description"><?js= group.description ?></span></div>
        <?js } ?>

            <?js= self.partial('method.tmpl', m) ?>

        <?js }); ?>
        <?js if(closeGroup){ ?> </div> <?js } ?>

    <?js } ?>

    <?js
        var typedefs = self.find({kind: 'typedef', memberof: isGlobalPage ? {isUndefined: true} : doc.longname});
        if (typedefs && typedefs.length && typedefs.forEach) {
    ?>
        <h3 class="subsection-title" data-type="typedef">Type Definitions</h3>

        <?js typedefs.forEach(function(e) {
                if (e.signature) {
            ?>
                <?js= self.partial('method.tmpl', e) ?>
            <?js
                }
                else {
            ?>
                <?js= self.partial('members.tmpl', e) ?>
            <?js
                }
            }); ?>
    <?js } ?>

    <?js
        var events = self.find({kind: 'event', memberof: isGlobalPage ? {isUndefined: true} : doc.longname});
        if (events && events.length && events.forEach) {
    ?>
        <h3 class="subsection-title" data-type="events">Events</h3>

        <?js events.forEach(function(e) { ?>
            <?js= self.partial('method.tmpl', e) ?>
        <?js }); ?>
    <?js } ?>
</article>

</section>
<?js } ?>

<?js }); ?>
